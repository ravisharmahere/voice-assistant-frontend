name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APP_NAME: voice-assistant-frontend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'

      # Setup pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.9

      # Build the Docker image from the Dockerfile
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest .

      # Log in to Docker Hub using secrets stored in GitHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      # Push the Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Deploy to your EC2 instance via SSH
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull the latest Docker image from Docker Hub
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
            # Stop and remove any running container named '${{ env.APP_NAME }}' if exists
            docker stop ${{ env.APP_NAME }} || true
            docker rm ${{ env.APP_NAME }} || true
            # Run the new container with a specific name and ensure proper port mapping
            docker run --name ${{ env.APP_NAME }} --env-file /home/ec2-user/.env -d -p 80:5001 ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
